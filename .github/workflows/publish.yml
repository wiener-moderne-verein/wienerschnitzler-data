name: Deploy HTML folder to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js (erforderlich für GitHub Pages Deployments)
      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        
      # Copy HTML folder to gh-pages branch
      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up repository configuration
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Erstelle den gh-pages-Branch (falls er nicht existiert)
          git checkout --orphan gh-pages

          # Lösche alle alten Dateien im gh-pages-Branch
          git rm -rf .

          # Kopiere den Inhalt des HTML-Ordners
          cp -r HTML/* .

          # Füge alle Änderungen hinzu und pushe sie auf gh-pages
          git add .
          git commit -m "Deploy HTML folder to GitHub Pages"
          git push -f origin gh-pages
